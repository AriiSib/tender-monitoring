services:
  db:
    image: postgres:16
    restart: always
    container_name: tender-db
    ports:
      - "5432:5432"
    networks:
      - tender_network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    image: ariisib/tender-monitoring:latest
    container_name: tender-app
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - tender_network
    environment:
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    restart: on-failure
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:

networks:
  tender_network:
